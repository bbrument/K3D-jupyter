#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# K3D-jupyter documentation build configuration file, created by
# sphinx-quickstart on Tue Jun 20 22:28:29 2017.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.

# -- path -------------------------------------------------------

import os
import sys
import sphinx_rtd_theme
from os.path import dirname

here = os.path.dirname(__file__)
docs = dirname(dirname(__file__))
root = dirname(docs)
sys.path.insert(0, root)

# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = ['sphinx.ext.autodoc',
              'sphinx.ext.doctest',
              'sphinx.ext.intersphinx',
              'sphinx.ext.todo',
              'sphinx.ext.coverage',
              'sphinx.ext.mathjax',
              'sphinx.ext.ifconfig',
              'sphinx.ext.viewcode',
              'sphinx.ext.githubpages',
              'nbsphinx',
              'nbsphinx_link',
              'jupyter_sphinx.embed_widgets']

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = 'K3D-jupyter'
copyright = u"2019, Marcin Kostur, Artur Trzesiok, Filip Kaskosz"
author = u"Marcin Kostur, Artur Trzesiok, Filip Kaskosz"

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#

repo = os.path.join(here, '..', '..')
_version_py = os.path.join(repo, 'k3d', '_version.py')
version_ns = {}
with open(_version_py) as f:
    exec (f.read(), version_ns)

# The short X.Y version.
version = '%i.%i' % version_ns['version_info'][:2]

# The full version, including alpha/beta/rc tags.
release = version_ns['__version__']

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = []

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True

# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'sphinx_rtd_theme'
html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
html_theme_options = {
    'analytics_id': 'UA-141840477-1'
}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# -- Options for HTMLHelp output ------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'K3D-jupyterdoc'

# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'K3D-jupyter.tex', 'K3D-jupyter Documentation',
     u"Marcin Kostur, Artur TrzÄ™siok", 'manual'),
]

# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'k3d-jupyter', 'K3D-jupyter Documentation',
     [author], 1)
]

# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'K3D-jupyter', 'K3D-jupyter Documentation',
     author, 'K3D-jupyter', 'One line description of project.',
     'Miscellaneous'),
]

# -- Options for Epub output ----------------------------------------------

# Bibliographic Dublin Core info.
epub_title = project
epub_author = author
epub_publisher = author
epub_copyright = copyright

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
#
# epub_identifier = ''

# A unique identification for the text.
#
# epub_uid = ''

# A list of files that should not be packed into the epub file.
epub_exclude_files = ['search.html']

# Example configuration for intersphinx: refer to the Python standard library.
intersphinx_mapping = {'https://docs.python.org/': None}

# Read The Docs
# on_rtd is whether we are on readthedocs.org, this line of code grabbed from
# docs.readthedocs.org
on_rtd = os.environ.get('READTHEDOCS', None) == 'True'


def add_scripts(app):
    from shutil import copyfile, move

    app.add_javascript('require_config.js')

    if not on_rtd:
        src = os.path.join(here, '..', '..', 'js', 'src', 'index.js')
        dst = os.path.join(here, '_static', 'k3d.js')
        copyfile(src, dst)

        src = os.path.join(here, '..', '..', 'js', 'src', 'standalone.js')
        dst = os.path.join(here, '_static', 'standalone.js')
        copyfile(src, dst)
    else:
        sys.path.append(os.path.abspath('./../../'))
        from k3d.helpers import download

        filename = download('https://unpkg.com/k3d/dist/index.js')
        move(filename, os.path.join(here, '_static', 'k3d.js'))

        filename = download('https://unpkg.com/k3d/dist/standalone.js')
        move(filename, os.path.join(here, '_static', filename))


def setup(app):
    app.setup_extension('jupyter_sphinx.embed_widgets')
    app.add_stylesheet('style.css')
    app.connect('builder-inited', add_scripts)
